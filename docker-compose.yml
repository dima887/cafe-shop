version: '3'
services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - shop-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql
    networks:
      - shop-network

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - shop-network

  phpmyadmin:
    build:
      context: ./phpMyAdmin
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: user
      PMA_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - shop-network

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: "listen --api-key ${STRIPE_API_KEY} --device-name ${STRIPE_DEVICE_NAME} --forward-to http://backend:8080/api/payment/webhook/"
    env_file:
      - ./stripe-cli/stripe_cli.env
    networks:
      - shop-network

#  postgres:
#    build:
#      context: ./postgresql
#      dockerfile: Dockerfile
#    restart: unless-stopped
#    container_name: postgresql
#    environment:
#      POSTGRES_DB: laravel
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: root
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./postgresql/data:/var/lib/postgresql/data
#    networks:
#      - shop-network
#
#  adminer:
#    image: adminer
#    restart: unless-stopped
#    container_name: adminer
#    ports:
#      - "8081:8080"
#    depends_on:
#      - postgres
#    networks:
#      - shop-network

networks:
  shop-network: